#!/usr/bin/env php
<?php

use Mihaeu\TestGenerator\ClassAnalyser;
use Mihaeu\TestGenerator\DependencyContainer;
use Mihaeu\TestGenerator\PhpFile;
use Mihaeu\TestGenerator\TestGenerator;

if (file_exists(__DIR__.'/../vendor/autoload.php')) {
    require __DIR__.'/../vendor/autoload.php';
} elseif (file_exists(__DIR__.'/../../../autoload.php')) {
    require __DIR__.'/../../../autoload.php';
} else {
    echo 'Run "composer install" in order to install the necessary dependencies.'.PHP_EOL;
    exit(1);
}

$description = <<<EOT
Test-Generator

Usage:
  test-generator <file> [--php5] [--phpunit5] [--mockery] [--covers] [--base-class=<base-class>]

Options:
  --php5                        Generate PHP5 compatible code [default:false].
  --phpunit5                    Generate a test for PHPUnit 5 [default:false].
  --mockery                     Generates mocks using Mockery [default:false].
  --covers                      Adds the @covers annotation   [default:false].
  --base-class=<base-class>     Inherit from this base class e.g. "Example\\TestCase".
EOT;
$args = Docopt::handle($description, $argv);

$di = new DependencyContainer($args);
try {
    $testGenerator = new TestGenerator(
        $di->parser(),
        new ClassAnalyser(),
        $di->nodeTraverser(),
        $di->twigRenderer()
    );
    echo $testGenerator->run(new PhpFile(new SplFileInfo($args['<file>'])));
} catch (Exception $exception) {
    echo $description
        . PHP_EOL
        . PHP_EOL
        . '! ' . $exception->getMessage()
        . PHP_EOL;
    exit(1);
}
